@page "/register"
@using BaseballManagerApp.Components.Layout
@using BaseballManagerApp.Identity
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@inject NavigationManager NavigationManager
@layout AuthLayout


<div class="container">
    <!-- Outer Row -->
    <div class="row justify-content-center">
        <div class="col-xl-10 col-lg-12 col-md-9">
            <div class="card o-hidden border-0 shadow-lg my-5">
                <div class="card-body p-0">
                    <!-- Nested Row within Card Body -->
                    <div class="row">
                        <div class="col-lg-6 d-none d-lg-block bg-login-image"></div>
                        <div class="col-lg-6">
                            <div class="p-5">
                                <div class="text-center">
                                    <h1 class="h4 text-gray-900 mb-4">Welcome to Baseball App, Sign Up to play Ball!</h1>
                                </div>
                                @if (!string.IsNullOrEmpty(ErrorMessage))
                                {
                                    <div class="alert alert-danger">
                                        @ErrorMessage
                                    </div>
                                }
                                <EditForm class="user" Model="RegisterRequest" method="post" OnValidSubmit="RegisterAsync" FormName="register">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary class="text-danger" role="alert" />
                                    <div class="form-group">
                                        <InputText class="form-control form-control-user"
                                                   id="Name" area-required="true"
                                                   @bind-Value="RegisterRequest.Name"
                                                   placeholder="Name">
                                        </InputText>
                                        <ValidationMessage For="() => RegisterRequest.Name" class="text-danger" />
                                    </div>
                                    <div class="form-group">
                                        <InputText type="email" class="form-control form-control-user"
                                                   id="Email" aria-required="true"
                                                   @bind-Value="RegisterRequest.Email"
                                                   placeholder="Email">
                                        </InputText>
                                        <ValidationMessage For="() => RegisterRequest.Email" class="text-danger" />
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-6 mb-3 mb-sm-0">
                                             <InputText type="password" class="form-control form-control-user"
                                                       id="Password" placeholder="Password" @bind-Value="RegisterRequest.Password">
                                            </InputText>
                                            <ValidationMessage For="() => RegisterRequest.Password" class="text-danger" />
                                            
                                        </div>
                                        <div class="col-sm-6">
                                            <InputText type="password" class="form-control form-control-user"
                                                       id="ConfirmPassword" placeholder="Confirm Password" @bind-Value="RegisterRequest.ConfirmPassword">
                                            </InputText>
                                            <ValidationMessage For="() => RegisterRequest.ConfirmPassword" class="text-danger" />
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-user btn-block">
                                        Register
                                    </button>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [SupplyParameterFromForm]
    private RegisterRequest RegisterRequest { get; set; } = new();

    [CascadingParameter]
    public HttpContext Context { get; set; } = null!;

    private string? ErrorMessage = "";

    private async Task RegisterAsync()
    {
        ApplicationUser user = new()
            {
                Name = RegisterRequest.Name,
                UserName = RegisterRequest.Email,
                Email = RegisterRequest.Email,
                PasswordHash = RegisterRequest.Password
            };

        var result = await userManager.CreateAsync(user, RegisterRequest.Password);

        if (!result.Succeeded)
        {
            ErrorMessage = "Error ocurrs creating the user";
        }
        else
        {
            ErrorMessage = "Validated";
            NavigationManager.NavigateTo("/login");
        }
    }
}
